console.log("Hello World!");const CORE_CACHE_NAME="cache-v3",RUNTIME_CACHE_NAME="runtime-cache",CORE_ASSETS=["/offline","css/core.css"];function fetchAndCache(e){return fetch(e).then(t=>{const c=t.clone();return caches.open(RUNTIME_CACHE_NAME).then(t=>t.put(e,c)),t})}self.addEventListener("install",e=>{e.waitUntil(caches.open("cache-v3").then(e=>e.addAll(CORE_ASSETS)).then(()=>self.skipWaiting()))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if("cache-v3"!==e&&e!==RUNTIME_CACHE_NAME)return caches.delete(e)}))))}),self.addEventListener("fetch",e=>{const t=new URL(e.request.url).pathname;e.request.headers.get("accept").includes("text/html")?e.respondWith(caches.open(RUNTIME_CACHE_NAME).then(t=>t.match(e.request)).then(t=>t||fetchAndCache(e.request)).catch(()=>caches.open("cache-v3").then(e=>e.match("/offline")))):CORE_ASSETS.includes(t)&&e.respondWith(caches.open("cache-v3").then(e=>e.match(t)))});